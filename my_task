# 当前任务

# 2012-03-28
1.参考Google提供的ApiDemos中的CameraPreview例子和官方文档说明完善应用的摄像机控制功能

# 2012-03-22
# 目前暂时无视网络端的功能,可以日后进行补充
1.需要测试FrameLayout的布局方士(包括代码方式和xml文件的方式)
2.有关Camera的API,Camera,SurfaceView,SurfaceViewHolder,还有一些相关的Callback

# 2012-03-21
1.设计简单的取景框,然后利用取景框获取图片并解析(即核心流程)
-涉及到对摄像头的控制(需要了解摄像头的控制方法,回调方法的激发条件)
-整体流程的细致设计

# 2012-03-20
1.设计摄像头取景界面,可适当延后
2.打开摄像头,取景(每个若干秒获取一次图片,把图片传输给Reader来处理,获取数据并显示)

# 2012-03-16
# 1.添加MultiFormatOneDAndQrCodeReader.java文件,由MultiFormatReader修改而来,删除了不需要进行识别的
# 条码reader
1.查看android/和javase/版本对动态图像识别时采用的算法

# 2012-03-13
1.提供一张纯粹的Qr_code或者条形码,解析并尝试获得数据 # (solved)

# 2012-03-12
1.目前需要理解core所作的工作,输入是什么,输出是什么,分别对应的类是什么. # (deprecated,任务太过笼统)
2.而android版本又是如何利用core来实现各项功能的                        # (deprecated,同上)

# 2012-03-10
# 1.废弃任务20120306task001
# 2.解决20120309task
# 3.解决20120310task002
1.添加并完善Utils.java          # (deprecated, 目前不是很急)
2.使用摄像头完成取景            # (solved)

# 2012-03-09
1.添加并完善CameraUtils.java    # (solved)
2.添加并完善CameraPreview.java  # (solved)
3.添加并完善文件IO类FileIO.java # (solved)

# 2012-03-08
# 1.对AndroidManifest.xml文件添加了大量可能需要的uses-permission和uses-feature

# 2012-03-06
# 1.废弃任务20120303task002
1.使用FrameLayout显示摄像头捕获的图像 # (deprecated, 使用xml布局不如继承View类来的灵活)

# 2012-03-05
# 1.解决20120303task003

# 2012-03-04
# solution: 
# 1.解决20120303task001

# 2012-03-03
# tasks:
1.对zxing中的core部分进行打包,生成jar放在libs下作为库进行调用 # (solved)
2.修改zxing中android部分代码                                  # (deprecated, 暂时无法达成)
3.阅读helps/integrate_zxing.txt中的帮助内容                   # (solved)
